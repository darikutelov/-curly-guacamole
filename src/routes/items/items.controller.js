const fs = require("fs");
var cloudinary = require("cloudinary").v2;
cloudinary.config({
  cloud_name: "dariku",
  secure: true,
  api_key: process.env.CLOUDINARY_API_KEY,
  api_secret: process.env.CLOUDINARY_API_SECRET_KEY,
});

const {
  saveItem,
  getAllItems,
  updateItem,
} = require("../../models/items/items.model");

const { addBid } = require("../../models/items/bids/bid.model");

async function httpGetAllNftItems(req, res) {
  const items = await getAllItems();
  return res.status(200).json({ nftItems: items });
}

async function httpSaveNftItem(req, res) {
  const { nftItem } = req.body;
  return res.status(200).json(await saveItem(nftItem));
}

async function httpUpdateNftItem(req, res) {
  const { itemId } = req.params;
  const item = req.body;
  console.log("ðŸ˜€");
  try {
    const updatedItem = await updateItem(itemId, item);
    res.status(200).json(updatedItem);
  } catch (error) {
    res.sendStatus(400);
  }
}

async function httpNftItemAddBid(req, res) {
  const { itemId } = req.params;
  const bid = req.body;

  try {
    const updatedItem = await addBid(req, itemId, bid);
    res.status(200).json(updatedItem);
  } catch (error) {
    console.log(error);
    res.status(400).send(error.message);
  }
}

async function httpSaveNftImage(req, res) {
  console.log("Uploading file");
  console.log(req.file);

  const newPath = `src/uploads/${req.file.originalname}`;
  fs.rename(req.file.path, newPath, () => {
    cloudinary.uploader.upload(
      `${newPath}`,
      { folder: "nftio/nftItems" },
      function (err, image) {
        console.log();
        console.log("** File Upload");
        if (err) {
          console.warn(err);
          res.status(400).send("Error uploading file to cloud!");
          return;
        }
        console.log(
          "* public_id for the uploaded image is generated by Cloudinary's service."
        );
        console.log("* " + image.public_id);
        console.log("* " + image.url);
        res.status(200).send(req.file.originalname);
      }
    );
  });
}

module.exports = {
  httpSaveNftItem,
  httpGetAllNftItems,
  httpUpdateNftItem,
  httpNftItemAddBid,
  httpSaveNftImage,
};
